#include "Common.ssh"
#include "SceneConstants.ssh"
#include "AtmosphereCommon.ssh"

struct VertexInput
{
    float3 mPosition : POSITION;
};

struct PixelInput
{
    float4 mClipPosition : SV_POSITION;
    float3 mViewDirection : VIEW_DIRECTION;
};

PixelInput MainVS(VertexInput aInput)
{
    PixelInput output;

    float3 worldPos = aInput.mPosition + SR_ViewConstants.mCameraPosition;
    float4 clipPos = mul(gSceneConstants.mViewConstants.mWorldToClip, float4(worldPos, 1.0f));

    output.mClipPosition = clipPos.xyww;
    output.mClipPosition.z = 0.0f;
    output.mViewDirection = normalize(worldPos - gSceneConstants.mViewConstants.mCameraPosition);
    return output;
}

float4 MainPS(PixelInput aInput) : SV_TARGET0
{
    return float4(SampleAtmosphereColor(aInput.mViewDirection), 1.0f);
}
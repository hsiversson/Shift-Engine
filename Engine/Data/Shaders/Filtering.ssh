#ifndef FILTERING_HEADER
#define FILTERING_HEADER
//#pragma once

float FilterCubic(in float x, in float B, in float C)
{
    float y = 0.0f;
    float x2 = x * x;
    float x3 = x * x * x;
    if(x < 1)
        y = (12 - 9 * B - 6 * C) * x3 + (-18 + 12 * B + 6 * C) * x2 + (6 - 2 * B);
    else if (x <= 2)
        y = (-B - 6 * C) * x3 + (6 * B + 30 * C) * x2 + (-12 * B - 48 * C) * x + (8 * B + 24 * C);

    return y / 6.0f;
}

float FilterMitchell(float x, bool aResolveCubicRescale)
{
    float cubicX = aResolveCubicRescale ? x * 2.0f : x;
    return FilterCubic(cubicX, 1 / 3.0f, 1 / 3.0f);
}

float FilterCatmullRom(float x)
{
    return FilterCubic(x, 0.0f, 0.5f);
}

float FilterMitchell(float x)
{
    return FilterCubic(x, 1 / 3.0f, 1 / 3.0f);
}

#endif //FILTERING_HEADER